{"version":3,"file":"public/javascripts/app.js","sources":["app/initialize.coffee","app/javascripts/MapControl.coffee","app/javascripts/SearchBox.coffee","app/javascripts/application.coffee"],"names":[],"mappings":"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","sourcesContent":["Application = require 'application'\napp = new Application","module.exports = class MapControl\n\tconstructor: ->\n\n    @markerDict = {}\n    @map = L.map('map',\n        scrollWheelZoom: false\n      )\n      .setView([59.9218, 10.73427], 10)\n      # .addLayer(L.mapbox.tileLayer('examples.map-20v6611k',\n      .addLayer(L.mapbox.tileLayer('evenwestvang.hp8gagn1',\n        detectRetina: true\n    ))\n\n    @initBoundaries()\n    @initMarkers()\n\n  initBoundaries: ->\n\n    svg = d3.select(@map.getPanes().overlayPane).append(\"svg\")\n    g = svg.append(\"g\").attr(\"class\", \"leaflet-zoom-hide\")\n\n    d3.json \"data/school_boundaries.topo.json\", (collection)=> \n    \n      projectStream = (x,y,that)=>\n        point = @map.latLngToLayerPoint(new L.LatLng(y, x))\n        that.stream.point(point.x, point.y)\n\n      reset = ()=>\n        bounds = path.bounds(topo)\n        topLeft = bounds[0]\n        bottomRight = bounds[1]\n\n        svg.attr(\"width\", bottomRight[0] - topLeft[0])\n          .attr(\"height\", bottomRight[1] - topLeft[1])\n          .style(\"left\", topLeft[0] + \"px\")\n          .style(\"top\", topLeft[1] + \"px\")\n\n        g.attr(\"transform\", \"translate(\" + -topLeft[0] + \",\" + -topLeft[1] + \")\")\n\n        feature.attr(\"d\", path)\n\n      topo = topojson.mesh(collection, collection.objects.school_boundaries);\n      transform = d3.geo.transform({point: (x,y)->projectStream(x,y,this)})\n      path = d3.geo.path().projection(transform)\n\n      feature = g.append(\"path\")\n        .datum(topo)\n\n      @map.on(\"viewreset\", reset)\n\n      reset()\n\n\n  initMarkers: ->\n    d3.json \"data/primaries.json\", (collection)=> \n      smallIcon = L.icon(\n          iconUrl: 'images/small_icon.png',\n          iconRetinaUrl: 'images/small_icon@2x.png',\n          iconSize:     [20, 20], \n          iconAnchor:   [10, 10], \n          popupAnchor:  [0, -1] \n      )\n\n      popupTemplate = require \"templates/popup\"\n\n      onEachFeature = (feature, layer)=>\n        properties = feature.properties\n        if properties\n          layer.bindPopup(popupTemplate(properties: properties))\n\n      pointToLayer = (feature, latlng)=>\n        marker = L.marker(latlng, {icon: smallIcon})\n        @markerDict[feature.properties.NAVN] = marker\n\n      L.geoJson(collection,\n        pointToLayer: pointToLayer\n        onEachFeature: onEachFeature\n        ).addTo(@map)\n\n  focusOnSchoolName: (name)->\n    $('html, body').animate({\n      scrollTop: $(\"#map\").offset().top\n    }, 300)\n    marker = @markerDict[name]\n    marker.openPopup()\n    @map.setView(marker._latlng, 13)","\nmodule.exports = class SearchBox\n\tconstructor: (controller) ->\n    @controller = controller\n    @streetTemplate = require \"templates/street_listing\"\n    @lastFieldValue = \"\"\n\n    @loadingPromise = new Promise (resolve, reject) =>\n\n      d3.csv \"data/addresses.csv\", (@addresses) => \n        @addressDict = {}\n        @addresses.forEach (address)=>\n\n          address.oddStart = +address.oddStart\n          address.evenStart = +address.evenStart\n          address.oddEnd = +address.oddEnd\n          address.evenEnd = +address.evenEnd\n\n          address.street = @capitaliseFirstLetter(address.street)\n          address.school = @capitaliseFirstLetter(address.school)\n\n          oneSchool = false\n          oneSchool = true if (address.oddStart == 1) && (address.evenStart == 2) && (address.oddEnd == 9999) && (address.evenEnd == 9998)\n\n          if !@addressDict[address.street]?\n            street = {\n              streetName: address.street\n              oneSchool: oneSchool\n            }\n\n            if oneSchool\n              street.school = address.school\n            else\n              street.oddNumbers = []\n              street.evenNumbers = []\n\n            @addressDict[address.street] = street\n\n          # Todo: Perhaps DRY this up\n          if !oneSchool\n            if address.oddStart != 0 && address.oddEnd != 0\n              @addressDict[address.street].oddNumbers.push {\n                school: address.school\n                range: [address.oddStart, address.oddEnd]\n              }\n\n            if address.evenStart != 0 && address.evenEnd != 0\n              @addressDict[address.street].evenNumbers.push {\n                school: address.school\n                range: [address.evenStart, address.evenEnd]\n              }\n\n        sortOnFirstValue = (array) ->\n          return undefined unless array\n          array.sort (a,b)-> a.range[0] > b.range[0]\n\n        Object.keys(@addressDict).forEach (key) =>\n          street = @addressDict[key]\n          sortOnFirstValue(street.oddNumbers)\n          sortOnFirstValue(street.evenNumbers)\n\n        resolve(1)\n        $(\"input#streetName\").keydown(_.debounce( (() => @keyEvent()) , 500))\n        $(\"input#streetName\").keyup(_.debounce( (() => @keyEvent()) , 500))\n\n  setQuery: (string) ->\n    $(\"input#streetName\").val(string)\n    @loadingPromise.then ()=>\n      @updateView()\n\n  capitaliseFirstLetter: (string) ->\n    string = string.toLowerCase()\n    string.charAt(0).toUpperCase() + string.slice(1);\n\n  keyEvent: (e) =>\n    @currentFieldValue = $(\"input#streetName\").val()\n    if @lastFieldValue != @currentFieldValue\n      history.replaceState({}, \"\", \"?streetName=\" + encodeURI(@currentFieldValue))\n      @lastFieldValue = $(\"input#streetName\").val()\n\n    @updateView()\n\n  updateView: () =>\n    fieldValue = $(\"input#streetName\").val()\n    result = @processInput(fieldValue)\n    if result\n      streets = result.matches\n\n      html = \"<ul>\"\n      streets.forEach (street)=>\n        html += @streetTemplate(street: street, digit: result.digit)\n      html = html + \"</ul>\"\n\n      $(\".searchResults\").html(html)\n      $(\".searchResults .schoolName\").click (e)=>\n        @controller.focusOnSchoolName(e.currentTarget.innerText)\n      $(\".searchResults, .inputWrapper\").addClass(\"populated\")\n    else\n      $(\".searchResults\").html(\"\")\n      $(\".searchResults, .inputWrapper\").removeClass(\"populated\")\n\n\tprocessInput: (matchString)=>\n    # TODO: Add sorting on levenshtein distance\n    digitMatch = matchString.match(/\\d+/g)\n\n    if digitMatch\n      digit = digitMatch[0] \n      matchString = matchString.slice(0,matchString.search(/\\d/))\n\n    digit ||= 0\n\n    matchString = matchString.replace(/\\s/g, '')\n\n    if matchString == \"\"\n      return false\n\n    expression = \"\"\n    len = matchString.length - 1\n    expression += matchString.charAt(i) + \"+.?\" for i in [0..len]\n    re = new RegExp(expression, \"i\")\n\n    matches = []\n\n    Object.keys(@addressDict).every (street)=>\n      matches.push(@addressDict[street]) if re.test(street)\n      return false if matches.length > 10\n      return true\n\n    matches.forEach (street)=>\n\n      unless street.oneSchool && digit?\n        if digit % 2 == 0\n          side = \"evenNumbers\"\n        else\n          side = \"oddNumbers\"\n\n        matchedSchool = 0\n        street[side].forEach (schoolRange)->\n          if digit >= schoolRange.range[0] && digit <= schoolRange.range[1]\n            matchedSchool = schoolRange.school \n          street.school = matchedSchool\n\n    return {\n      digit: digit\n      matches: matches \n    }\n\n","\nMapControl = require 'MapControl'\nSearchBox = require 'SearchBox'\n\nmodule.exports = class Application\n\tconstructor: ->\n    @searchBox = new SearchBox(this)\n    @mapControl = new MapControl()\n\n    $(document).ready ()=>\n      query = location.search.split(\"=\")\n      if query[0] == \"?streetName\"\n        @searchBox.setQuery(decodeURI(query[1]))\n\n  focusOnSchoolName: (name)->\n    @mapControl.focusOnSchoolName(name)\n\n"]}